<workflow xmlns="http://taverna.sf.net/2008/xml/t2flow" version="1" producedBy="taverna-2.3.0">
	<dataflow id="25844137-5ff3-4d11-9ff4-72ac0e132ba1" role="top">
		<name>Workflow1</name>
		<inputPorts>
			<port>
				<name>datasetFilePath</name>
				<depth>0</depth>
				<granularDepth>0</granularDepth>
				<annotations />
			</port>
		</inputPorts>
		<outputPorts>
			<port>
				<name>result</name>
				<annotations />
			</port>
		</outputPorts>
		<processors>
			<processor>
				<name>Filter_List_of_Strings_by_regex</name>
				<inputPorts>
					<port>
						<name>regex</name>
						<depth>0</depth>
					</port>
					<port>
						<name>stringlist</name>
						<depth>1</depth>
					</port>
				</inputPorts>
				<outputPorts>
					<port>
						<name>filteredlist</name>
						<depth>1</depth>
						<granularDepth>1</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2.activities</group>
							<artifact>localworker-activity</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.activities.localworker.LocalworkerActivity</class>
						<inputMap>
							<map from="regex" to="regex" />
							<map from="stringlist" to="stringlist" />
						</inputMap>
						<outputMap>
							<map from="filteredlist" to="filteredlist" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean xmlns="">
								<inputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<name>stringlist</name>
										<depth>1</depth>
										<mimeTypes>
											<string>l('text/plain')</string>
										</mimeTypes>
										<handledReferenceSchemes />
										<translatedElementType>java.lang.String</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<name>regex</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/plain'</string>
										</mimeTypes>
										<handledReferenceSchemes />
										<translatedElementType>java.lang.String</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
								</inputs>
								<outputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
										<name>filteredlist</name>
										<depth>1</depth>
										<mimeTypes>
											<string>l('text/plain')</string>
										</mimeTypes>
										<granularDepth>1</granularDepth>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
								</outputs>
								<classLoaderSharing>workflow</classLoaderSharing>
								<localDependencies />
								<artifactDependencies />
								<script>filteredlist = new ArrayList();
									for (Iterator i = stringlist.iterator(); i.hasNext();) {
									String item = (String) i.next();
									if (item.matches(regex)) {
									filteredlist.add(item);
									}
									}
</script>
								<dependencies />
								<localworkerName>org.embl.ebi.escience.scuflworkers.java.FilterStringList</localworkerName>
							</net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean>
						</configBean>
						<annotations />
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
								<maxJobs>1</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>1000</initialDelay>
								<maxDelay>5000</maxDelay>
								<maxRetries>0</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy>
							<cross>
								<port name="regex" depth="0" />
								<port name="stringlist" depth="1" />
							</cross>
						</strategy>
					</iteration>
				</iterationStrategyStack>
			</processor>
			<processor>
				<name>regex_value</name>
				<inputPorts />
				<outputPorts>
					<port>
						<name>value</name>
						<depth>0</depth>
						<granularDepth>0</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2.activities</group>
							<artifact>stringconstant-activity</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class>
						<inputMap />
						<outputMap>
							<map from="value" to="value" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
								<value>\n</value>
							</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean>
						</configBean>
						<annotations />
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
								<maxJobs>1</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>1000</initialDelay>
								<maxDelay>5000</maxDelay>
								<maxRetries>0</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy />
					</iteration>
				</iterationStrategyStack>
			</processor>
			<processor>
				<name>regex_value_1</name>
				<inputPorts />
				<outputPorts>
					<port>
						<name>value</name>
						<depth>0</depth>
						<granularDepth>0</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2.activities</group>
							<artifact>stringconstant-activity</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class>
						<inputMap />
						<outputMap>
							<map from="value" to="value" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">
								<value>.*Ulysses_NOUN.*</value>
							</net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean>
						</configBean>
						<annotations />
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
								<maxJobs>1</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>1000</initialDelay>
								<maxDelay>5000</maxDelay>
								<maxRetries>0</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy />
					</iteration>
				</iterationStrategyStack>
			</processor>
			<processor>
				<name>Split_string_into_string_list_by_regular_expression</name>
				<inputPorts>
					<port>
						<name>regex</name>
						<depth>0</depth>
					</port>
					<port>
						<name>string</name>
						<depth>0</depth>
					</port>
				</inputPorts>
				<outputPorts>
					<port>
						<name>split</name>
						<depth>1</depth>
						<granularDepth>1</granularDepth>
					</port>
				</outputPorts>
				<annotations />
				<activities>
					<activity>
						<raven>
							<group>net.sf.taverna.t2.activities</group>
							<artifact>localworker-activity</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.activities.localworker.LocalworkerActivity</class>
						<inputMap>
							<map from="regex" to="regex" />
							<map from="string" to="string" />
						</inputMap>
						<outputMap>
							<map from="split" to="split" />
						</outputMap>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean xmlns="">
								<inputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<name>string</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/plain'</string>
										</mimeTypes>
										<handledReferenceSchemes />
										<translatedElementType>java.lang.String</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
										<name>regex</name>
										<depth>0</depth>
										<mimeTypes>
											<string>'text/plain'</string>
										</mimeTypes>
										<handledReferenceSchemes />
										<translatedElementType>java.lang.String</translatedElementType>
										<allowsLiteralValues>true</allowsLiteralValues>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>
								</inputs>
								<outputs>
									<net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
										<name>split</name>
										<depth>1</depth>
										<mimeTypes>
											<string>l('text/plain')</string>
										</mimeTypes>
										<granularDepth>1</granularDepth>
									</net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>
								</outputs>
								<classLoaderSharing>workflow</classLoaderSharing>
								<localDependencies />
								<artifactDependencies />
								<script>List split = new ArrayList();
									if (!string.equals("")) {
									String regexString = ",";
									if (regex != void) {
									regexString = regex;
									}
									String[] result = string.split(regexString);
									for (int i = 0; i &lt; result.length; i++) {
									split.add(result[i]);
									}
									}
</script>
								<dependencies />
								<localworkerName>org.embl.ebi.escience.scuflworkers.java.SplitByRegex</localworkerName>
							</net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean>
						</configBean>
						<annotations />
					</activity>
				</activities>
				<dispatchStack>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">
								<maxJobs>1</maxJobs>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class>
						<configBean encoding="xstream">
							<net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">
								<backoffFactor>1.0</backoffFactor>
								<initialDelay>1000</initialDelay>
								<maxDelay>5000</maxDelay>
								<maxRetries>0</maxRetries>
							</net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig>
						</configBean>
					</dispatchLayer>
					<dispatchLayer>
						<raven>
							<group>net.sf.taverna.t2.core</group>
							<artifact>workflowmodel-impl</artifact>
							<version>1.3</version>
						</raven>
						<class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class>
						<configBean encoding="xstream">
							<null xmlns="" />
						</configBean>
					</dispatchLayer>
				</dispatchStack>
				<iterationStrategyStack>
					<iteration>
						<strategy>
							<cross>
								<port name="regex" depth="0" />
								<port name="string" depth="0" />
							</cross>
						</strategy>
					</iteration>
				</iterationStrategyStack>
			</processor>
		</processors>
		<conditions />
		<datalinks>
			<datalink>
				<sink type="processor">
					<processor>Filter_List_of_Strings_by_regex</processor>
					<port>regex</port>
				</sink>
				<source type="processor">
					<processor>regex_value_1</processor>
					<port>value</port>
				</source>
			</datalink>
			<datalink>
				<sink type="processor">
					<processor>Filter_List_of_Strings_by_regex</processor>
					<port>stringlist</port>
				</sink>
				<source type="processor">
					<processor>Split_string_into_string_list_by_regular_expression</processor>
					<port>split</port>
				</source>
			</datalink>
			<datalink>
				<sink type="processor">
					<processor>Split_string_into_string_list_by_regular_expression</processor>
					<port>regex</port>
				</sink>
				<source type="processor">
					<processor>regex_value</processor>
					<port>value</port>
				</source>
			</datalink>
			<datalink>
				<sink type="processor">
					<processor>Split_string_into_string_list_by_regular_expression</processor>
					<port>string</port>
				</sink>
				<source type="dataflow">
					<port>datasetFilePath</port>
				</source>
			</datalink>
			<datalink>
				<sink type="dataflow">
					<port>result</port>
				</sink>
				<source type="processor">
					<processor>Filter_List_of_Strings_by_regex</processor>
					<port>filteredlist</port>
				</source>
			</datalink>
		</datalinks>
		<annotations>
			<annotation_chain_2_2 encoding="xstream">
				<net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
					<annotationAssertions>
						<net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
							<annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
								<identification>e71678a9-6a18-4650-bc0e-20a16278cd94</identification>
							</annotationBean>
							<date>2013-09-23 14:10:06.546 CEST</date>
							<creators />
							<curationEventList />
						</net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
					</annotationAssertions>
				</net.sf.taverna.t2.annotation.AnnotationChainImpl>
			</annotation_chain_2_2>
			<annotation_chain_2_2 encoding="xstream">
				<net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
					<annotationAssertions>
						<net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
							<annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
								<identification>e12ef05c-45d4-4890-bccf-f8129e1fdfb6</identification>
							</annotationBean>
							<date>2013-09-23 14:08:33.375 CEST</date>
							<creators />
							<curationEventList />
						</net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
					</annotationAssertions>
				</net.sf.taverna.t2.annotation.AnnotationChainImpl>
			</annotation_chain_2_2>
			<annotation_chain_2_2 encoding="xstream">
				<net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
					<annotationAssertions>
						<net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
							<annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
								<identification>25844137-5ff3-4d11-9ff4-72ac0e132ba1</identification>
							</annotationBean>
							<date>2013-09-23 14:15:33.239 CEST</date>
							<creators />
							<curationEventList />
						</net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
					</annotationAssertions>
				</net.sf.taverna.t2.annotation.AnnotationChainImpl>
			</annotation_chain_2_2>
			<annotation_chain_2_2 encoding="xstream">
				<net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
					<annotationAssertions>
						<net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
							<annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
								<identification>3f882c08-8dfa-4329-9217-845a62c73d8c</identification>
							</annotationBean>
							<date>2013-09-23 13:59:45.865 CEST</date>
							<creators />
							<curationEventList />
						</net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
					</annotationAssertions>
				</net.sf.taverna.t2.annotation.AnnotationChainImpl>
			</annotation_chain_2_2>
			<annotation_chain_2_2 encoding="xstream">
				<net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
					<annotationAssertions>
						<net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
							<annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
								<identification>ebd86225-8bbf-4e75-83c4-2213cdc1e752</identification>
							</annotationBean>
							<date>2013-09-23 14:05:24.681 CEST</date>
							<creators />
							<curationEventList />
						</net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
					</annotationAssertions>
				</net.sf.taverna.t2.annotation.AnnotationChainImpl>
			</annotation_chain_2_2>
			<annotation_chain_2_2 encoding="xstream">
				<net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
					<annotationAssertions>
						<net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
							<annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
								<identification>946fee9e-2887-47ad-9490-ed5ef0dfde89</identification>
							</annotationBean>
							<date>2013-09-23 14:07:06.554 CEST</date>
							<creators />
							<curationEventList />
						</net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
					</annotationAssertions>
				</net.sf.taverna.t2.annotation.AnnotationChainImpl>
			</annotation_chain_2_2>
			<annotation_chain_2_2 encoding="xstream">
				<net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
					<annotationAssertions>
						<net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
							<annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
								<identification>4b86bed7-a108-428c-9448-77a7d1f743f2</identification>
							</annotationBean>
							<date>2013-09-23 14:02:17.380 CEST</date>
							<creators />
							<curationEventList />
						</net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
					</annotationAssertions>
				</net.sf.taverna.t2.annotation.AnnotationChainImpl>
			</annotation_chain_2_2>
			<annotation_chain_2_2 encoding="xstream">
				<net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">
					<annotationAssertions>
						<net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
							<annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">
								<identification>1cc614dc-40d7-41e6-bc73-2e63c6003b22</identification>
							</annotationBean>
							<date>2013-09-23 14:02:58.188 CEST</date>
							<creators />
							<curationEventList />
						</net.sf.taverna.t2.annotation.AnnotationAssertionImpl>
					</annotationAssertions>
				</net.sf.taverna.t2.annotation.AnnotationChainImpl>
			</annotation_chain_2_2>
		</annotations>
	</dataflow>
</workflow>